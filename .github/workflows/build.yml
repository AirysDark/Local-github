name: Build Local-github (Pi — Fixed YAML)

on:
  workflow_dispatch:
    inputs:
      target_bits:
        type: choice
        description: "Build target + bitness"
        options: [ "pi 64bit", "pi 32bit" ]
        default: "pi 64bit"

      user_creds:
        type: choice
        description: "Console username:password"
        options:
          - User:password
          - AirysDark:Zombie1986X2
          - chip:raspberry
        default: AirysDark:Zombie1986X2

      wifi_creds:
        type: choice
        description: "Wi‑Fi SSID:password"
        options:
          - WI-FI SSID:password
          - Raspbain:Zombie1986X2
          - YourWiFi:YourPassword
        default: Raspbain:Zombie1986X2

      ssh_options:
        type: choice
        description: "SSH options (PermitRootLogin:PasswordAuth:PubkeyAuth)"
        options:
          - true:true:true
          - prohibit-password:true:true
          - false:true:true
          - true:false:true
          - false:false:true
          - true:true:false
        default: true:true:true

      net_ipv4:
        type: choice
        description: "Static IPv4:Gateway:DNS(semicolon-separated)"
        options:
          - 192.168.0.8:192.168.0.1:1.1.1.1;8.8.8.8
          - 192.168.1.50:192.168.1.1:1.1.1.1;8.8.8.8
          - 10.0.0.50:10.0.0.1:9.9.9.9;1.1.1.1
        default: 192.168.0.8:192.168.0.1:1.1.1.1;8.8.8.8

      wifi_country:
        description: "Wi‑Fi country (ISO 3166‑1 alpha‑2)"
        default: AU

      timezone:
        description: "Timezone (IANA tzdb)"
        default: Australia/Sydney

      keyboard:
        description: "Keyboard layout (XKB)"
        default: us

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Parse target+bitness
        id: tgt
        shell: bash
        run: |
          set -e
          SEL='${{ github.event.inputs.target_bits }}'
          TARGET="${SEL% *}"
          BIT="${SEL##* }"
          echo "target=$TARGET" >> "$GITHUB_OUTPUT"
          echo "bit_type=$BIT"  >> "$GITHUB_OUTPUT"
          echo "Selected: target=$TARGET bit_type=$BIT"

      - name: Compute architectures
        id: arch
        shell: bash
        run: |
          set -e
          BIT="${{ steps.tgt.outputs.bit_type }}"
          PI="arm64"
          if [ "$BIT" = "32bit" ]; then PI="armhf"; fi
          echo "pi=$PI" >> "$GITHUB_OUTPUT"
          echo "Resolved: pi=$PI"

      - name: Parse paired credentials
        id: creds
        shell: bash
        run: |
          set -e
          USER_PAIR='${{ github.event.inputs.user_creds }}'
          WIFI_PAIR='${{ github.event.inputs.wifi_creds }}'
          USERNAME="${USER_PAIR%%:*}"
          USERPASS="${USER_PAIR#*:}"
          WIFI_SSID="${WIFI_PAIR%%:*}"
          WIFI_PASSWORD="${WIFI_PAIR#*:}"
          echo "username=$USERNAME"            >> "$GITHUB_OUTPUT"
          echo "userpass=$USERPASS"            >> "$GITHUB_OUTPUT"
          echo "wifi_ssid=$WIFI_SSID"          >> "$GITHUB_OUTPUT"
          echo "wifi_password=$WIFI_PASSWORD"  >> "$GITHUB_OUTPUT"

      - name: Parse static IPv4 tuple
        id: net
        shell: bash
        run: |
          set -e
          TUPLE='${{ github.event.inputs.net_ipv4 }}'
          IP="${TUPLE%%:*}"
          REST="${TUPLE#*:}"
          GW="${REST%%:*}"
          DNS="${REST#*:}"
          echo "static_ip=$IP"    >> "$GITHUB_OUTPUT"
          echo "gateway=$GW"      >> "$GITHUB_OUTPUT"
          echo "dns=$DNS"         >> "$GITHUB_OUTPUT"
          echo "Parsed net: ip=$IP gw=$GW dns=$DNS"

      - name: Parse SSH options (PermitRootLogin:PasswordAuth:PubkeyAuth)
        id: ssh
        shell: bash
        run: |
          set -e
          OPT='${{ github.event.inputs.ssh_options }}'
          IFS=':' read -r PERMIT_ROOT PASSAUTH PUBKEY <<<"$OPT"
          case "$PERMIT_ROOT" in
            true|yes|on) PRL="yes" ;;
            prohibit-password|prohibit_password|prohibit) PRL="prohibit-password" ;;
            false|no|off) PRL="no" ;;
            *) PRL="$PERMIT_ROOT" ;;
          esac
          case "$PASSAUTH" in true|yes|on) PA="yes" ;; false|no|off) PA="no" ;; *) PA="$PASSAUTH" ;; esac
          case "$PUBKEY"   in true|yes|on) PK="yes" ;; false|no|off) PK="no" ;; *) PK="$PUBKEY"   ;; esac
          echo "permit_root_login=$PRL"  >> "$GITHUB_OUTPUT"
          echo "password_auth=$PA"       >> "$GITHUB_OUTPUT"
          echo "pubkey_auth=$PK"         >> "$GITHUB_OUTPUT"

      - name: Prepare overlay files
        shell: bash
        env:
          HOSTNAME:           ${{ github.event.inputs.wifi_country }}-${{ steps.tgt.outputs.bit_type }}
          WIFI_COUNTRY:       ${{ github.event.inputs.wifi_country }}
          TIMEZONE:           ${{ github.event.inputs.timezone }}
          KEYBOARD:           ${{ github.event.inputs.keyboard }}
          STATIC_IP:          ${{ steps.net.outputs.static_ip }}
          GATEWAY:            ${{ steps.net.outputs.gateway }}
          DNS:                ${{ steps.net.outputs.dns }}
          PERMIT_ROOT_LOGIN:  ${{ steps.ssh.outputs.permit_root_login }}
          PASSWORD_AUTH:      ${{ steps.ssh.outputs.password_auth }}
          PUBKEY_AUTH:        ${{ steps.ssh.outputs.pubkey_auth }}
          USERNAME:           ${{ steps.creds.outputs.username }}
          USERPASS:           ${{ steps.creds.outputs.userpass }}
          WIFI_SSID:          ${{ steps.creds.outputs.wifi_ssid }}
          WIFI_PASSWORD:      ${{ steps.creds.outputs.wifi_password }}
        run: |
          set -e
          mkdir -p pi-gen/stage4/05-local-github/files/etc/ssh/sshd_config.d
          cat > pi-gen/stage4/05-local-github/files/etc/ssh/sshd_config.d/local-github.conf <<'EOF'
PermitRootLogin __PERMIT_ROOT_LOGIN__
PasswordAuthentication __PASSWORD_AUTH__
PubkeyAuthentication __PUBKEY_AUTH__
EOF

          mkdir -p pi-gen/stage4/05-local-github/files/etc/wpa_supplicant
          cat > pi-gen/stage4/05-local-github/files/etc/wpa_supplicant/wpa_supplicant.conf <<'EOF'
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=__WIFI_COUNTRY__

network={
  ssid="__WIFI_SSID__"
  psk="__WIFI_PASSWORD__"
}
EOF

          mkdir -p pi-gen/stage4/05-local-github/files/etc
          echo "__TIMEZONE__" > pi-gen/stage4/05-local-github/files/etc/timezone

          mkdir -p pi-gen/stage4/05-local-github/files/etc/default
          echo 'XKBLAYOUT="__KEYBOARD__"' > pi-gen/stage4/05-local-github/files/etc/default/keyboard

          mkdir -p pi-gen/stage4/05-local-github/files/etc/NetworkManager/system-connections
          cat > pi-gen/stage4/05-local-github/files/etc/NetworkManager/system-connections/eth0.nmconnection <<'EOF'
[connection]
id=eth0
type=ethernet
interface-name=eth0

[ipv4]
address1=__STATIC_IP__/24,__GATEWAY__
dns=__DNS__
method=manual

[ipv6]
addr-gen-mode=default
method=ignore
EOF

          # Substitute placeholders safely
          find pi-gen -type f -print0 | xargs -0 sed -i             -e "s/__HOSTNAME__/${HOSTNAME}/g"             -e "s/__USERNAME__/${USERNAME}/g"             -e "s/__USERPASS__/${USERPASS}/g"             -e "s/__WIFI_SSID__/${WIFI_SSID}/g"             -e "s/__WIFI_PASSWORD__/${WIFI_PASSWORD}/g"             -e "s/__WIFI_COUNTRY__/${WIFI_COUNTRY}/g"             -e "s#__TIMEZONE__#${TIMEZONE}#g"             -e "s/__KEYBOARD__/${KEYBOARD}/g"             -e "s/__STATIC_IP__/${STATIC_IP}/g"             -e "s/__GATEWAY__/${GATEWAY}/g"             -e "s/__DNS__/${DNS}/g"             -e "s/__PERMIT_ROOT_LOGIN__/${PERMIT_ROOT_LOGIN}/g"             -e "s/__PASSWORD_AUTH__/${PASSWORD_AUTH}/g"             -e "s/__PUBKEY_AUTH__/${PUBKEY_AUTH}/g"

      - name: Build Raspberry Pi image (pi-gen-action)
        if: ${{ steps.tgt.outputs.target == 'pi' }}
        uses: usimd/pi-gen-action@v1
        with:
          release: bookworm
          image_name: Local-github
          enable_ssh: true
          stage_list: "stage0 stage1 stage2 stage4"
          deploy_compression: xz
          deploy_compression_level: 9
          deploy_zip: true
          # architecture: ${{ steps.arch.outputs.pi }}  # uncomment if supported

      - name: Upload Pi artifact
        if: ${{ steps.tgt.outputs.target == 'pi' }}
        uses: actions/upload-artifact@v4
        with:
          name: Local-github-pi-${{ steps.arch.outputs.pi }}
          path: deploy/*
